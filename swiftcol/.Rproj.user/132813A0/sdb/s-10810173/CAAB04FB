{
    "collab_server" : "",
    "contents" : "##----------------------------------------------------------------------------------------------------------##\n##  Cedric Scherer (cedricphilippscherer@gmail.com)                                                         ##\n##  Script for analysing simulation results                                                                 ##\n##  2018-02-28                                                                                              ##\n##----------------------------------------------------------------------------------------------------------##\n\n#### PACKAGES ------------------------------------------------------------------------------------------------\n\nlibrary(tidyverse)       ## data wrangling\nlibrary(landscapetools)  ## theme_nlm()\nlibrary(nord)            ## colors\nlibrary(patchwork)       ## combine ggplots\n\n\n#### PREPARATION ---------------------------------------------------------------------------------------------\n\nsource(\"./R/parameters.R\")\nsource(\"./R/ggtheme.R\")\n\n\n#### DATA ----------------------------------------------------------------------------------------------------\n\ndestfile <- \"./Simulations/results_100x52.Rds\"\n\nif (!file.exists(destfile)) {\n  print(\"running simulations\")\n  source(\"1_Simulation.R\")\n  print(\"results available\")\n} else if (exists(\"results\")) {\n  print(\"results available\")\n} else {\n  print(\"loading results\")\n  results <- readRDS(destfile)\n  print(\"results available\")\n}\n\nrm(destfile)\n\n\n#### CLEANING DATA -------------------------------------------------------------------------------------------\n\nscen <- nlms %>% \n  as_tibble() %>% \n  transmute(Run = 1:n(),\n            Landscape = gsub(\"[^[a-z]\", \"\", value)) %>% \n  mutate(Landscape = factor(Landscape, levels = c(\"hom\", \"npllow\", \"nplhigh\")))\n\nresults_proc <- results %>% \n  t() %>% \n  tbl_df() %>% \n  unnest() %>% \n  full_join(scen, ., by = \"Run\") %>% \n  mutate(Run = factor(Run)) %>% \n  group_by(Run) %>% \n  mutate(WeekOutbreak = Weeks - WeekRelease,\n         WeekLast = max(Weeks))\n  \n\n#### PROBaBILITY OF PERSISTENCE ------------------------------------------------------------------------------\n\npers_year <- map_df((1:50) * 52, ~results_proc %>% \n                   filter(WeekOutbreak == .x) %>% \n                   group_by(Landscape) %>% \n                   summarise(prob = n() / n,\n                             year = .x / 52))\n\n## add zero probability to final year\nlast <- pers_year %>% group_by(Landscape) %>% summarize(last = max(year))\npers_year <- add_row(pers_year, Landscape = pull(last[1]), prob = 0, year = pull(last[2])) %>% \n  arrange(Landscape, year)\n\n#pers_year_wide <- pers_year %>% spread(year, prob)\n\ncols <- nord(\"victory_bonds\", 3)\n\np_pers <- ggplot(pers_year, aes(year, prob, col = Landscape)) + \n  geom_line(size = 1) + \n  ylim(0, 1) +\n  scale_x_continuous(breaks = seq(0, 50, 5)) + \n  #scale_color_nord(\"victory_bonds\", discrete = T, name = \"Landscape type\", \n  #                 labels = c(\"homogeneous\", \"low fragmentation\", \"high fragmentation\")) +\n  scale_color_manual(values = cols, name = \"Landscape type:  \", \n                     labels = c(\"homogeneous\", \"low fragmentation\", \"high fragmentation         \")) +\n  labs(x = \"Year after outbreak\", y = \"Probability of persistence\", tag = \"A\") +\n  theme_nlm(legend.position = \"right\", legend_text_size = 10, legend_title_size = 10,\n            axis_title_size = 8.5, axis_title_just = 0.5, axis_text_size = 11, panel.grid.minor = element_blank())\n\nggsave(\"./Output/Plot_ProbPersistence.png\", p_pers, width = 8, height = 7, dpi = 300)\n\n\n#### NUMBER OF INFECTED INDIVIDUALS (relative?) ---------------------------------------------------------------\n\ninf <- results_proc %>% \n  group_by(Landscape) %>% \n  summarize(sum_inf = sum(IndTran) + sum(IndLeth),\n            pop = sum(IndSusc) + sum(IndTran) + sum(IndLeth) + sum(IndImmu)) %>% \n  mutate(prop_inf = sum_inf / pop)\n\np_inf <- ggplot(inf, aes(Landscape, prop_inf, fill = Landscape)) + \n  geom_bar(stat = \"identity\", width = 0.5) + \n  expand_limits(y = 0.03) + \n  labs(x = \"Landscape type\", y = \"Proportion of infected individuals\", tag = \"B\") + \n  theme_nlm_discrete(legend.position = \"none\", axis_title_size = 12, axis_title_just = 0.5, \n                     axis_text_size = 8.5) +\n  scale_fill_manual(values = cols) +\n  scale_x_discrete(limit = c(\"hom\", \"npllow\", \"nplhigh\"),\n                   labels = c(\"homogeneous\",\"low fragmentation\",\"high fragmentation\"))\n  \n\n#### COMBINE PLOTS --------------------------------------------------------------------------------------------\n\np <- p_pers + p_inf\n\nggsave(\"./Output/Plots.png\", p, width = 10, height = 4, dpi = 300)\n\n\n\n\n",
    "created" : 1521475346914.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4170989253",
    "id" : "CAAB04FB",
    "lastKnownWriteTime" : 1521807899,
    "last_content_update" : 1521807899,
    "path" : "M:/TEMP/NLMR/2_Analysis.R",
    "project_path" : "2_Analysis.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}